;; Auto-generated. Do not edit!


(when (boundp 'my_robot_move_msgs::PainterMoveGoal)
  (if (not (find-package "MY_ROBOT_MOVE_MSGS"))
    (make-package "MY_ROBOT_MOVE_MSGS"))
  (shadow 'PainterMoveGoal (find-package "MY_ROBOT_MOVE_MSGS")))
(unless (find-package "MY_ROBOT_MOVE_MSGS::PAINTERMOVEGOAL")
  (make-package "MY_ROBOT_MOVE_MSGS::PAINTERMOVEGOAL"))

(in-package "ROS")
;;//! \htmlinclude PainterMoveGoal.msg.html


(defclass my_robot_move_msgs::PainterMoveGoal
  :super ros::object
  :slots (_host _port _acceleration _velocity _epsilon _ways ))

(defmethod my_robot_move_msgs::PainterMoveGoal
  (:init
   (&key
    ((:host __host) "")
    ((:port __port) 0)
    ((:acceleration __acceleration) 0.0)
    ((:velocity __velocity) 0.0)
    ((:epsilon __epsilon) 0.0)
    ((:ways __ways) (instance my_robot_move_msgs::Points :init))
    )
   (send-super :init)
   (setq _host (string __host))
   (setq _port (round __port))
   (setq _acceleration (float __acceleration))
   (setq _velocity (float __velocity))
   (setq _epsilon (float __epsilon))
   (setq _ways __ways)
   self)
  (:host
   (&optional __host)
   (if __host (setq _host __host)) _host)
  (:port
   (&optional __port)
   (if __port (setq _port __port)) _port)
  (:acceleration
   (&optional __acceleration)
   (if __acceleration (setq _acceleration __acceleration)) _acceleration)
  (:velocity
   (&optional __velocity)
   (if __velocity (setq _velocity __velocity)) _velocity)
  (:epsilon
   (&optional __epsilon)
   (if __epsilon (setq _epsilon __epsilon)) _epsilon)
  (:ways
   (&rest __ways)
   (if (keywordp (car __ways))
       (send* _ways __ways)
     (progn
       (if __ways (setq _ways (car __ways)))
       _ways)))
  (:serialization-length
   ()
   (+
    ;; string _host
    4 (length _host)
    ;; int32 _port
    4
    ;; float32 _acceleration
    4
    ;; float32 _velocity
    4
    ;; float32 _epsilon
    4
    ;; my_robot_move_msgs/Points _ways
    (send _ways :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _host
       (write-long (length _host) s) (princ _host s)
     ;; int32 _port
       (write-long _port s)
     ;; float32 _acceleration
       (sys::poke _acceleration (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _velocity
       (sys::poke _velocity (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _epsilon
       (sys::poke _epsilon (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; my_robot_move_msgs/Points _ways
       (send _ways :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _host
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _host (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; int32 _port
     (setq _port (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; float32 _acceleration
     (setq _acceleration (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _velocity
     (setq _velocity (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _epsilon
     (setq _epsilon (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; my_robot_move_msgs/Points _ways
     (send _ways :deserialize buf ptr-) (incf ptr- (send _ways :serialization-length))
   ;;
   self)
  )

(setf (get my_robot_move_msgs::PainterMoveGoal :md5sum-) "2eaee159032b051f1ffcf20961a0ee4e")
(setf (get my_robot_move_msgs::PainterMoveGoal :datatype-) "my_robot_move_msgs/PainterMoveGoal")
(setf (get my_robot_move_msgs::PainterMoveGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string host
int32 port
float32 acceleration
float32 velocity 
float32 epsilon
my_robot_move_msgs/Points ways


================================================================================
MSG: my_robot_move_msgs/Points
Point[] data

================================================================================
MSG: my_robot_move_msgs/Point
float32 x
float32 y
float32 z
float32 rx
float32 ry
float32 rz

")



(provide :my_robot_move_msgs/PainterMoveGoal "2eaee159032b051f1ffcf20961a0ee4e")


